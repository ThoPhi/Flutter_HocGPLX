import 'dart:async';
import 'package:flutter/material.dart';

String linkImage = "assets/Image/Slide";
int index = 1;
String currentPath = linkImage + '1.jpg';
var answer = [
  2,
  2,
  1,
  3,
  1,
  1,
  4,
  2,
  1,
  3,
  3,
  3,
  2,
  2,
  2,
  4,
  3,
  2,
  3,
  1,
  1,
  1,
  2,
  1,
  2,
  3,
  3,
  2,
  1,
  3,
  2,
  4,
  2,
  2,
  3,
  1,
  2,
  4,
  1,
  1,
  1,
  4,
  2,
  4,
  4,
  3,
  1,
  2,
  4,
  3,
  2,
  3,
  1,
  2,
  2,
  3,
  1,
  2,
  2,
  2,
  3,
  2,
  1,
  1,
  2,
  2,
  3,
  1,
  2,
  2,
  1,
  2,
  1,
  3,
  4,
  4,
  1,
  3,
  3,
  3,
  3,
  4,
  3,
  1,
  2,
  3,
  2,
  4,
  2,
  1,
  1,
  2,
  3,
  3,
  4,
  2,
  3,
  3,
  3,
  1, //100
  1,
  2,
  1,
  1,
  1,
  3,
  1,
  1,
  1,
  3,
  1,
  2,
  4,
  2,
  1,
  2,
  4,
  2,
  3,
  1,
  1,
  1,
  2,
  2,
  1,
  2,
  1,
  1,
  2,
  2,
  1,
  1,
  3,
  2,
  3,
  3,
  2,
  3,
  3,
  3,
  1,
  3,
  3,
  4,
  1,
  3,
  3,
  2,
  3,
  4,
  1,
  2,
  3,
  3,
  3,
  1,
  1,
  1,
  3,
  2,
  3,
  1,
  4,
  2,
  4,
  2,
  1,
  3,
  3,
  1,
  2,
  4,
  4,
  2,
  1,
  1,
  1,
  3,
  1,
  1,
  1,
  3,
  3,
  3,
  1,
  1,
  3,
  2,
  1,
  1,
  3,
  2,
  3,
  1,
  3,
  4,
  3,
  2,
  2,
  2, //200
  3,
  2,
  1,
  1,
  3,
  1,
  1,
  3,
  3,
  3,
  1,
  3,
  4,
  1,
  1,
  2,
  2,
  1,
  4,
  2,
  2,
  1,
  1,
  2,
  1,
  3,
  3,
  4,
  1,
  2,
  2,
  3,
  1,
  2,
  1,
  4,
  1,
  3,
  4,
  2,
  3,
  1,
  1,
  2,
  1,
  1,
  1,
  2,
  1,
  3,
  1,
  1,
  1,
  1,
  3,
  1,
  1,
  1,
  4,
  1,
  1,
  2,
  3,
  1,
  4,
  4,
  3,
  3,
  1,
  2,
  3,
  2,
  4,
  1,
  3,
  1,
  3,
  1,
  3,
  1,
  2,
  1,
  3,
  2,
  1,
  1,
  2,
  3,
  3,
  1,
  3,
  1,
  4,
  2,
  1,
  1,
  4,
  1,
  2,
  4, //300
  4,
  1,
  3,
  2,
  1,
  4,
  2,
  1,
  3,
  1,
  3,
  3,
  2,
  4,
  3,
  2,
  2,
  1,
  2,
  3,
  1,
  1,
  1,
  3,
  2,
  2,
  3,
  1,
  2,
  3,
  2,
  1,
  2,
  1,
  3,
  4,
  3,
  3,
  1,
  2,
  1,
  2,
  1,
  3,
  1,
  1,
  3,
  2,
  1,
  2,
  2,
  2,
  2,
  2,
  1,
  1,
  2,
  2,
  1,
  1,
  1,
  2,
  2,
  1,
  1,
  2,
  2,
  1,
  2,
  2,
  1,
  3,
  1,
  4,
  1,
  3,
  2,
  3,
  1,
  2,
  1,
  4,
  3,
  3,
  2,
  1,
  2,
  1,
  3,
  3,
  1,
  2,
  1,
  2,
  3,
  2,
  3,
  3,
  1,
  2, //400
  2,
  2,
  2,
  2,
  2,
  3,
  1,
  3,
  2,
  2,
  2,
  1,
  2,
  2,
  2,
  2,
  2,
  1,
  1,
  2,
  1,
  3,
  1,
  2,
  3,
  1,
  2,
  1,
  2,
  2,
  3,
  1,
  2,
  1,
  2,
  3,
  1,
  2,
  1,
  4,
  3,
  4,
  2,
  3,
  1,
  1,
  3,
  3,
  1,
  3,
  2,
  3,
  1,
  1,
  2,
  2,
  3,
  3,
  1,
  2,
  3,
  3,
  1,
  1,
  1,
  1,
  2,
  2,
  2,
  4,
  1,
  3,
  1,
  3,
  2,
  2,
  3,
  4,
  2,
  4,
  1,
  2,
  4,
  3,
  2,
  1,
  2,
  1,
  4,
  3,
  1,
  2,
  1,
  2,
  2,
  1,
  1,
  2,
  1,
  2, //500
  2,
  2,
  1,
  3,
  1,
  2,
  1,
  1,
  3,
  2,
  2,
  2,
  1,
  1,
  2,
  1,
  2,
  1,
  2,
  4,
  1,
  2,
  3,
  2,
  1,
  2,
  3,
  3,
  3,
  1,
  3,
  2,
  3,
  1,
  3,
  1,
  4,
  2,
  3,
  2,
  1,
  2,
  1,
  1,
  2,
  2,
  3,
  3,
  2,
  1,
  3,
  2,
  3,
  2,
  2,
  2,
  3,
  4,
  4,
  2,
  3,
  2,
  1,
  2,
  2,
  3,
  3,
  2,
  1,
  1,
  3,
  2,
  3,
  3,
  2,
  2,
  2,
  4,
  3,
  1,
  2,
  3,
  3,
  4,
  1,
  2,
  3,
  2,
  2,
  3,
  1,
  1,
  3,
  1,
  2,
  2,
  2,
  2,
  1,
  2, //600
];
int _isAnswer = 0;

class DeThi extends StatefulWidget {
  @override
  _DeThiState createState() => _DeThiState();
}

class _DeThiState extends State<DeThi> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: new AppBar(
        title: Text("Bo de 600 cau"),
        // leading: IconButton(
        //   onPressed: () {},
        //   icon: Icon(Icons.arrow_right),
        // ),
        actions: <Widget>[
          Center(
              child: Text(
            index.toString() + "/600   ",
            style: TextStyle(fontSize: 20),
          )),
          IconButton(
            icon: Icon(Icons.arrow_right),
            onPressed: () {
              _isAnswer = 0;
              setState(() {
                index++;
                // print(index);
                // currentPath = linkImage + index.toString() + '.jpg';
              });
            },
          ),
        ],
      ),
      body: Column(
        children: <Widget>[
          // Image.asset(currentPath),
          Image.asset(linkImage + index.toString() + '.jpg'),
          Container(
            margin: EdgeInsets.all(20),
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: <Widget>[
              ButtonTheme(
                minWidth: 80,
                height: 50,
                buttonColor: Colors.lightGreen,
                child: RaisedButton(
                  onPressed: () {
                    print('1');
                    setState(() {
                      _isAnswer = 1;
                    });
                    _isAnswer = 0;
                    // await Future.delayed(Duration(milliseconds: 5000));
                    Timer(Duration(milliseconds: 1000), () {
                      setState(() {
                        index++;
                      });
                    });
                    // setState(() {
                    //   index++;
                    // });
                    // }
                  },
                  child: AnimatedContainer(
                    child: const Text(
                      "1",
                      style: TextStyle(fontSize: 20),
                    ),
                  ),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                    // side: BorderSide(color: Colors.green),
                  ),
                  color: _isAnswer == 1
                      ? answer[index - 1] == 1
                          ? Colors.green
                          : Colors.red
                      : Colors.lightBlueAccent,
                ),
              ),
              ButtonTheme(
                minWidth: 80,
                height: 50,
                buttonColor: Colors.lightGreen,
                child: RaisedButton(
                  onPressed: () {
                    print('2');
                    setState(() {
                      _isAnswer = 2;
                      if (answer[index - 1] == _isAnswer) {
                        Future.delayed(Duration(milliseconds: 5000));
                        _isAnswer = 0;
                        setState(() {
                          index++;
                        });
                      }
                    });
                  },
                  child: const Text(
                    "2",
                    style: TextStyle(fontSize: 20),
                  ),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                    // side: BorderSide(color: Colors.green),
                  ),
                  color: _isAnswer == 2
                      ? answer[index - 1] == 2
                          ? Colors.green
                          : Colors.red
                      : Colors.lightBlueAccent,
                ),
              ),
              ButtonTheme(
                minWidth: 80,
                height: 50,
                buttonColor: Colors.lightGreen,
                child: RaisedButton(
                  onPressed: () {
                    print('3');
                    setState(() {
                      _isAnswer = 3;
                      if (answer[index - 1] == _isAnswer) {
                        Future.delayed(Duration(milliseconds: 5000));
                        _isAnswer = 0;
                        setState(() {
                          index++;
                        });
                      }
                    });
                  },
                  child: const Text(
                    "3",
                    style: TextStyle(fontSize: 20),
                  ),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                    // side: BorderSide(color: Colors.green),
                  ),
                  color: _isAnswer == 3
                      ? answer[index - 1] == 3
                          ? Colors.green
                          : Colors.red
                      : Colors.lightBlueAccent,
                ),
              ),
              ButtonTheme(
                minWidth: 80,
                height: 50,
                buttonColor: Colors.lightGreen,
                child: RaisedButton(
                  onPressed: () {
                    print('4');
                    setState(() {
                      _isAnswer = 4;
                      if (answer[index - 1] == _isAnswer) {
                        Future.delayed(Duration(milliseconds: 5000));
                        _isAnswer = 0;
                        setState(() {
                          index++;
                        });
                      }
                    });
                  },
                  child: const Text(
                    "4",
                    style: TextStyle(fontSize: 20),
                  ),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                    // side: BorderSide(color: Colors.green),
                  ),
                  color: _isAnswer == 4
                      ? answer[index - 1] == 4
                          ? Colors.green
                          : Colors.red
                      : Colors.lightBlueAccent,
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}
